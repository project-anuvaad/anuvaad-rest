http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  api:
    host: '*'
    paths: '/translate-docx'
  translate-docx:
    host: '*'
    paths: '/v2/translate-docx'
  fetch-process:
    host: '*'
    paths: '/fetch-translation-process'
  fetch-sentences:
    host: '*'
    paths: '/fetch-sentences'
  translation_en:
    host: '*'
    paths: '/translation_en'
  translation_hi:
    host: '*'
    paths: '/translation_hi'
  fetch-corpus-sentences:
    host: '*'
    paths: '/fetch-corpus-sentences'
  fetch-corpus:
    host: '*'
    paths: '/fetch-corpus'
  update-sentences:
    host: '*'
    paths: '/update-sentences'
  update-sentences-grade:
    host: '*'
    paths: '/update-sentences-grade'
  update-sentences-status:
    host: '*'
    paths: '/update-sentences-status'
  get-profile:
    host: '*'
    paths: '/get-profile'
  test-api:
    host: '*'
    paths: '/hello'
  update-password:
    host: '*'
    paths: '/update-password'
  upload-corpus:
    host: '*'
    paths: '/upload-corpus'
  translate:
    host: '*'
    paths: '/translate'
  fetch-benchmarks:
    host: '*'
    paths: '/fetch-benchmarks'
  fetch-benchmark-sentences:
    host: '*'
    paths: '/fetch-benchmark-sentences'
  get-corpus:
    host: '*'
    paths: '/get-corpus'
  translate-source:
    host: '*'
    paths: '/translate-source'
serviceEndpoints:
  httpbin:
    url: 'http://nlp-nmt-160078446.us-west-2.elb.amazonaws.com/corpus/'
  auto:
    url: 'http://nlp-nmt-160078446.us-west-2.elb.amazonaws.com/auto/'
  corpusproxy:
    url: 'http://nlp-nmt-160078446.us-west-2.elb.amazonaws.com/auto/anuvaad/v1/'
  translation:
    url: 'http://52.40.71.62:3003/translator/'
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - headers
pipelines:
  pipeline1:
    apiEndpoints:
      - test-api
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - cors:
      - basic-auth:
      - proxy:
          - action:
              serviceEndpoint: httpbin 
              changeOrigin: true
  corpus:
    apiEndpoints:
      - fetch-corpus-sentences
      - fetch-corpus
      - translate-source
      - update-sentences
      - update-sentences-status
      - update-sentences-grade
      - fetch-benchmarks
      - fetch-benchmark-sentences
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - cors:
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: corpusproxy 
              changeOrigin: true
  translation:
    apiEndpoints:
      - translation_en
      - translation_hi
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - cors:
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - rate-limit:
        - action:                         # allow
            max: 5                       # max 5 request
            windowMs: 1000              # per 1 seconds
            rateLimitBy: "${consumer.token.authenticatedUserId}"
      - proxy:
          - action:
              serviceEndpoint: translation 
              changeOrigin: true
  auto:
    apiEndpoints:
      - translate
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - cors:
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - rate-limit:
        - action:                         # allow
            max: 5                       # max 5 request
            windowMs: 1000              # per 1 seconds
            rateLimitBy: "${consumer.token.authenticatedUserId}"
      - proxy:
          - action:
              serviceEndpoint: auto 
              changeOrigin: true
  default:
    apiEndpoints:
      - api
      - translate-docx
      - fetch-process
      - fetch-sentences
      - get-profile
      - update-password
      - upload-corpus
      - get-corpus
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - cors:
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: httpbin 
              changeOrigin: true
  

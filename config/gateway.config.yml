http:
  port: ${NODE_PORT:-8080}
  hostname: 0.0.0.0
admin:
  port: ${ADMIN_PORT:-9876}
  hostname: 0.0.0.0
apiEndpoints:
  api:
    host: '*'
    paths: '/translate-docx'
  translate-docx:
    host: '*'
    paths: '/v2/translate-docx'
  fetch-languages:
    host: '*'
    paths: '/fetch-languages'
  fetch-models:
    host: '*'
    paths: '/fetch-models'
  update-model:
    host: '*'
    paths: '/update-model'
  save-model:
    host: '*'
    paths: '/save-model'
  fetch-process:
    host: '*'
    paths: '/fetch-translation-process'
  fetch-sentences:
    host: '*'
    paths: '/fetch-sentences'
  save-paragraph-workspace:
    host: '*'
    paths: '/save-paragraph-workspace'
  translation_en:
    host: '*'
    paths: '/translation_en'
  translation_hi:
    host: '*'
    paths: '/translation_hi'
  fetch-corpus-sentences:
    host: '*'
    paths: '/fetch-corpus-sentences'
  remove-process:
    host: '*'
    paths: '/remove-process'
  fetch-corpus:
    host: '*'
    paths: '/fetch-corpus'
  update-sentences:
    host: '*'
    paths: '/update-sentences'
  update-sentences-grade:
    host: '*'
    paths: '/update-sentences-grade'
  update-sentences-status:
    host: '*'
    paths: '/update-sentences-status'
  get-profile:
    host: '*'
    paths: '/get-profile'
  test-api:
    host: '*'
    paths: '/hello'
  update-password:
    host: '*'
    paths: '/update-password'
  upload-corpus:
    host: '*'
    paths: '/upload-corpus'
  translate:
    host: '*'
    paths: '/translate'
  fetch-benchmarks:
    host: '*'
    paths: '/fetch-benchmarks'
  fetch-benchmark-sentences:
    host: '*'
    paths: '/fetch-benchmark-sentences'
  fetch-benchmark-compare-sentences:
    host: '*'
    paths: '/fetch-benchmark-compare-sentences'
  fetch-benchmark-reports:
    host: '*'
    paths: '/fetch-benchmark-reports'
  fetch-benchmark-analyzer-reports:
    host: '*'
    paths: '/fetch-benchmark-analyzer-reports'
  get-corpus:
    host: '*'
    paths: '/get-corpus'
  signup-user:
    host: '*'
    paths: '/v1/user/signup-user'
  forgot-user-password:
    host: '*'
    paths: '/v1/user/forgot-user-password'
  set-user-password:
    host: '*'
    paths: '/set-user-password'
  translate-source:
    host: '*'
    paths: '/translate-source'
  list-users:
    host: '*'
    paths: '/list-users'
    scopes:
      - 'admin'
  list-roles:
    host: '*'
    paths: '/list-roles'
  create-user:
    host: '*'
    paths: '/create-user'
    scopes:
      - 'admin'
  update-user-status:
    host: '*'
    paths: '/update-user-status'
    scopes:
      - 'admin'
  save-benchmark:
    host: '*'
    paths: '/save-benchmark'
  update-password-admin:
    host: '*'
    paths: '/update-password-admin'
    scopes:
      - 'admin'
  fetch-paragraph-workspace:
    host: '*'
    paths: '/fetch-paragraph-workspace'
  start-tokenization:
    host: '*'
    paths: '/start-tokenization'
  fetch-paragraph-workspace-detail:
    host: '*'
    paths: '/fetch-paragraph-workspace-detail'
  translate-with-hemat:
    host: '*'
    paths: '/translate-with-hemat'
  fetch-default-config:
    host: '*'
    paths: '/fetch-default-config'
  download-docx:
    host: '*'
    paths: '/download-docx'
  save-composition-workspace:
    host: '*'
    paths: '/save-composition-workspace'
  save-translated-docx:
    host: '*'
    paths: '/save-translated-docx'
  save-mt-workspace:
    host: '*'
    paths: '/save-mt-workspace'
  fetch-mt-workspace:
    host: '*'
    paths: '/fetch-mt-workspace'
  fetch-mt-workspace-detail:
    host: '*'
    paths: '/fetch-mt-workspace-detail'
  fetch-high-courts:
    host: '*'
    paths: '/fetch-high-courts'
  update-high-court:
    host: '*'
    paths: '/update-high-court'
  save-high-court:
    host: '*'
    paths: '/save-high-court'
  migrate-old-data:
    host: '*'
    paths: '/migrate-old-data'
  translate-anuvaad:
    host: '*'
    paths: '/translate-anuvaad'
  save-search-replace-workspace:
    host: '*'
    paths: '/save-search-replace-workspace'
  fetch-search-replace-workspace:
    host: '*'
    paths: '/fetch-search-replace-workspace'
  fetch-search-replace-sentence:
    host: '*'
    paths: '/fetch-search-replace-sentence'
  update-search-replace-sentence:
    host: '*'
    paths: '/update-search-replace-sentence'
  fetch-search-replace-workspace-detail:
    host: '*'
    paths: '/fetch-search-replace-workspace-detail'
  save-mt-workspace-data:
    host: '*'
    paths: '/save-mt-workspace-data'
  save-paragraph-workspace-data:
    host: '*'
    paths: '/save-paragraph-workspace-data'
  fetch-feedback-questions:
    host: '*'
    paths: '/fetch-feedback-questions'
  save-feedback-questions:
    host: '*'
    paths: '/save-feedback-questions'
  check-feedback-pending:
    host: '*'
    paths: '/check-feedback-pending'
  save-captured-feedback:
    host: '*'
    paths: '/save-captured-feedback'
  accept-all-search-replace-sentence:
    host: '*'
    paths: '/accept-all-search-replace-sentence'
  fetch-composition-workspace:
    host: '*'
    paths: '/fetch-composition-workspace'
  fetch-composition-workspace-detail:
    host: '*'
    paths: '/fetch-composition-workspace-detail'
  start-pdf-parse-process:
    host: '*'
    paths: '/v1/interactive-editor/start-pdf-parse-process'
  fetch-pdf-parse-process:
    host: '*'
    paths: '/v1/interactive-editor/fetch-pdf-parse-process'
  fetch-pdf-sentences:
    host: '*'
    paths: '/v1/interactive-editor/fetch-pdf-sentences'
  activate-account:
    host: '*'
    paths: '/v1/user/activate-account'
  extract-paragraphs:
    host: '*'
    paths: '/v1/interactive-editor/extract-paragraphs'
  extract-paragraphs-pagewise:
    host: '*'
    paths: '/v1/interactive-editor/extract-paragraphs-pagewise'
  tokenize-sentence:
    host: '*'
    paths: '/tokenize-sentence'
  convert-to-pdf:
    host: '*'
    paths: '/convert-to-pdf'
  v2_tokenize-sentence:
    host: '*'
    paths: '/v2/tokenize-sentence'
  tokenize-hindi-sentence:
    host: '*'
    paths: '/tokenize-hindi-sentence'
  interactive-translation:
    host: '*'
    paths: '/interactive-translation'
  interactive-translation_v1:
    host: '*'
    paths: '/v1/interactive-translation'
  convert-pdf-to-doc:
    host: '*'
    paths: '/convert-pdf-to-doc'
  lines:
    host: '*'
    paths: '/lines'
  extract:
    host: '*'
    paths: '/extract'
  pdf-extractor:
    host: '*'
    paths: '/api/v0/pdf-extractor'
  merge-blocks-wf:
    host: '*'
    paths: '/api/v0/merge-blocks-wf'
  ner:
    host: '*'
    paths: '/ner'
  translate-pdf:
    host: '*'
    paths: '/v1/interactive-editor/translate-pdf'
  update-pdf-sentences:
    host: '*'
    paths: '/v1/interactive-editor/update-pdf-sentences'
  make-doc-from-sentences:
    host: '*'
    paths: '/v1/interactive-editor/make-doc-from-sentences'
  extract-pdf-paragraphs:
    host: '*'
    paths: '/v1/interactive-editor/extract-pdf-paragraphs'
  extract-pdf-to-sentences:
    host: '*'
    paths: '/v1/interactive-editor/extract-pdf-to-sentences'
  extract-pdf-to-sentencesv2:
    host: '*'
    paths: '/v2/interactive-editor/extract-pdf-to-sentences'
  merge-split-sentence:
    host: '*'
    paths: '/v1/interactive-editor/merge-split-sentence'
  update-pdf-source-sentences:
    host: '*'
    paths: '/v1/interactive-editor/update-pdf-source-sentences'
  update-pdf-source-table:
    host: '*'
    paths: '/v1/interactive-editor/update-pdf-source-table'
  delete-sentence:
    host: '*'
    paths: '/v1/interactive-editor/delete-sentence'
  delete-table-sentence:
    host: '*'
    paths: '/v1/interactive-editor/delete-table-sentence'
  add-sentence-node:
    host: '*'
    paths: '/v1/interactive-editor/add-sentence-node'
  etl-merge-nodes:
    host: '*'
    paths: '/v1/interactive-editor/etl-merge-nodes'
  translate_pdf_v2:
    host: '*'
    paths: '/v2/interactive-editor/translate-pdf'
  lines_v2:
    host: '*'
    paths: '/api/v2/ocr/lines'
  digital_pdf:
    host: '*'
    paths: '/v1/digital_pdf'
  aadhaar:
    host: '*'
    paths: '/aadhaar'
  ner_v0:
    host: '*'
    paths: '/v0/ner'
  upload_file:
    host: '*'
    paths: '/anuvaad/v1/upload'
  download_file:
    host: '*'
    paths: '/anuvaad/v1/download'
  sent_tokenize:
    host: '*'
    paths: '/api/v0/tokenisation'
  sent_tokenize_wf:
    host: '*'
    paths: '/api/v0/tokenisation-wf'
  ner_etl:
    host: '*'
    paths: '/api/v0/ner-annotation'
  ner_etl_wf:
    host: '*'
    paths: '/api/v0/ner-annotation-wf'
  aligner_align:
    host: '*'
    paths: '/anuvaad-etl/extractor/aligner/sentences/align'
  aligner_get:
    host: '*'
    paths: '/anuvaad-etl/extractor/aligner/alignment/jobs/get'
  get_job:
    host: '*'
    paths: '/anuvaad-etl/extractor/aligner/v1/alignment/jobs/get*'
  wf_sen_align:
    host: '*'
    paths: '/anuvaad-etl/extractor/aligner/v1/sentences/wflow/align'
  wf_sen:
    host: '*'
    paths: '/anuvaad-etl/extractor/aligner/v1/sentences/align'
  wf_initiate:
    host: '*'
    paths: '/anuvaad-etl/wf-manager/v1/workflow/initiate'
  wf_interrupt:
    host: '*'
    paths: '/anuvaad-etl/wf-manager/v1/workflow/interrupt'
  wf_search_bulk:
    host: '*'
    paths: '/anuvaad-etl/wf-manager/v1/workflow/jobs/search/bulk'
  wf_search_config:
    host: '*'
    paths: '/anuvaad-etl/wf-manager/v1/workflow/configs/search'
  wf_search:
    host: '*'
    paths: '/anuvaad-etl/wf-manager/v1/workflow/jobs/search*'
  pdf_to_html:
    host: '*'
    paths: '/api/v0/pdf-to-html'
  pdf_to_html_wf:
    host: '*'
    paths: '/api/v0/pdf-to-html-wf'
  html_to_json:
    host: '*'
    paths: '/api/v0/html-to-json'
  html_to_json_wf:
    host: '*'
    paths: '/api/v0/html-to-json-wf'
  sentence_extract_lines:
    host: '*'
    paths: '/anuvaad-etl/extractor/sentence/v1/sentences/extract_lines'
  sentence_extract_lines_v2:
    host: '*'
    paths: '/api/v3/ocr/lines'
  convert-pdf:
    host: '*'
    paths: '/api/v0/convert-pdf'
  upload-file:
    host: '*'
    paths: '/api/v0/upload-file'
  wf_translate:
    host: '*'
    paths: '/anuvaad-etl/translator/v1/doc/workflow/translate'
  save-content:
    host: '*'
    paths: '/api/v0/save-content'
  fetch-content:
    host: '*'
    paths: '/api/v0/fetch-content'
  update-content:
    host: '*'
    paths: '/api/v0/update-content'
  serve-file:
    host: '*'
    paths: '/api/v0/serve-file'
  download-file:
    host: '*'
    paths: '/api/v0/download-file'
  feedback_report:
    host: '*'
    paths: '/feedback_report/_search'
    methods: ["GET", "OPTIONS"]
  doc_report:
    host: '*'
    paths: '/doc_report/_search'
    methods: ["GET", "OPTIONS"]
serviceEndpoints:
  httpbin:
    url: ${PYTHON_URL:-'http://gateway_python:5001/'}
  auto:
    url: ${AUTO_URL:-'http://documents.anuvaad.org/auto/'}
  corpusproxy:
    url: ${NODE_URL:-'http://documents.anuvaad.org/auto/anuvaad/v1/'}
  corpusproxywithoutauth:
    url: ${NODE_URL:-'http://documents.anuvaad.org/auto/anuvaad/v1/'}
  translation:
    url: ${NMT_URL:-'http://52.40.71.62:3003/translator/'}
  elastic:
    url: ${ELASTIC_URL:-'http://52.88.54.220:9200/'}
  interactive:
    url: ${INTERACTIVE_URL:-'http://52.40.71.62:5001/'}
  ocr_server:
    url: ${OCR_SERVER_URL:-'http://172.30.0.103:6000/api/v1/ocr/'}
  preprocessing_server:
    url: ${PRE_PROCESSING_SERVER_URL:-'http://172.30.0.103:6000/'}
  doc_structure_server:
    url: ${DOC_STRUCTURE_SERVER_URL:-'http://172.30.0.103:7000/'}
  ocr_aadhar_server:
    url: 'http://172.30.0.103:5000/api/v1/ocr/'
  ner_server:
    url: 'http://172.30.0.103:5001/api/'
  file_server:
    url: ${FILE_SERVER_URL:-'http://gateway_anuvaad-fileuploader:5008/'}
  sentence_tokenizer_server:
    url: ${SEN_TOKENIZER_SERVER_URL:-'http://gateway_sentence-tokenisation:5001/'}
  ner_etl_server:
    url: ${NER_ETL_SERVER_URL:-'http://gateway_ner:5001/'}
  aligner_etl_server:
    url: ${ALIGNER_ETL_SERVER_URL:-'http://gateway_anuvaad-etl-aligner:5003/'}
  wf_manager_server:
    url: ${WF_MANAGER_SERVER_URL:-'http://gateway_anuvaad-etl-wf-manager:5002/'}
  pdftohtml_etl_server:
    url: ${PDFTOHTML_ETL_SERVER_URL:-'http://gateway_anuvaad-etl-pdf2html:5001/'}
  htmltojson_etl_server:
    url: ${HTMLTOJSON_ETL_SERVER_URL:-'http://gateway_anuvaad-etl-html2json:5001/'}
  ocr_etl_server:
    url: ${OCR_ETL_SERVER_URL:-'http://gateway_anuvaad-etl-ocr:5003/'}
  ocr_etl_server_v2:
    url: ${OCR_ETL_SERVER_URL_V2:-'http://172.30.0.155:6000/'}
  block_merger_server:
    url: ${BLOCK_MERGER_SERVER_URL:-'http://gateway_anuvaad-block-merger:5001/'}
  file_converter_server:
    url: ${FILE_CONVERTER_SERVER_URL:-'http://gateway_anuvaad-file-converter:5001/'}
  user_file_uploader_server:
    url: ${USER_FILE_UPLOADER_SERVER_URL:-'http://gateway_anuvaad-user-fileuploader:5001/'}
  content_handler_server:
    url: ${CONTENT_HANDLER_SERVER_URL:-'http://gateway_anuvaad-content-handler:5001/'}
  translator_server:
    url: ${TRANSLATOR_SERVER_URL:-'http://gateway_anuvaad-etl-translator:5004/'}
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - headers
  - jaeger-policy
pipelines:
  pipeline1:
    apiEndpoints:
      - test-api
      - download-docx
      - tokenize-sentence
      - v2_tokenize-sentence
      - tokenize-hindi-sentence
      - ner
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - cors:
      - jaeger-policy:
      - proxy:
          - action:
              serviceEndpoint: httpbin 
              changeOrigin: true
  admin:
    apiEndpoints:
      - list-users
      - list-roles
      - create-user
      - update-user-status
      - fetch-benchmark-reports
      - fetch-benchmark-analyzer-reports
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: corpusproxy 
              changeOrigin: true
  corpus:
    apiEndpoints:
      - fetch-corpus-sentences
      - save-paragraph-workspace
      - fetch-corpus
      - translate-source
      - update-sentences
      - update-sentences-status
      - update-sentences-grade
      - fetch-benchmarks
      - fetch-benchmark-sentences
      - fetch-benchmark-compare-sentences
      - list-users
      - list-roles
      - translate-with-hemat
      - fetch-models
      - save-model
      - update-model
      - fetch-languages
      - fetch-paragraph-workspace
      - fetch-paragraph-workspace-detail
      - start-tokenization
      - fetch-default-config
      - save-mt-workspace
      - fetch-mt-workspace
      - fetch-mt-workspace-detail
      - fetch-high-courts
      - update-high-court
      - save-high-court
      - migrate-old-data
      - save-search-replace-workspace
      - fetch-search-replace-workspace
      - fetch-search-replace-sentence
      - update-search-replace-sentence
      - fetch-search-replace-workspace-detail
      - save-mt-workspace-data
      - save-paragraph-workspace-data
      - save-feedback-questions
      - fetch-feedback-questions
      - check-feedback-pending
      - save-captured-feedback
      - accept-all-search-replace-sentence
      - save-composition-workspace
      - fetch-composition-workspace
      - fetch-composition-workspace-detail
      - start-pdf-parse-process
      - fetch-pdf-parse-process
      - fetch-pdf-sentences
      - convert-pdf-to-doc
      - translate-pdf
      - update-pdf-sentences
      - make-doc-from-sentences
      - extract-pdf-paragraphs
      - extract-pdf-to-sentences
      - extract-pdf-to-sentencesv2
      - merge-split-sentence
      - update-pdf-source-sentences
      - update-pdf-source-table
      - delete-sentence
      - delete-table-sentence
      - add-sentence-node
      - etl-merge-nodes
      - translate_pdf_v2
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: corpusproxy 
              changeOrigin: true
  elasticsearch:
    apiEndpoints:
      - doc_report
      - feedback_report
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - cors:
         - action:
              origin: true
              methods: 'GET'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: elastic 
              changeOrigin: true
  translation:
    apiEndpoints:
      - translation_en
      - translation_hi
      - translate-anuvaad
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - rate-limit:
        - action:                         # allow
            max: 50                       # max 50 request
            delayMs: 0
            windowMs: 1000              # per 1 seconds
            rateLimitBy: "${consumer.token.authenticatedUserId}"
      - proxy:
          - action:
              serviceEndpoint: translation 
              changeOrigin: true
  interactive:
    apiEndpoints:
      - interactive-translation
      - interactive-translation_v1
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - rate-limit:
        - action:                         # allow
            max: 50                       # max 50 request
            delayMs: 0
            windowMs: 1000              # per 1 seconds
            rateLimitBy: "${consumer.token.authenticatedUserId}"
      - proxy:
          - action:
              serviceEndpoint: interactive 
              changeOrigin: true
  ocr:
    apiEndpoints:
      - lines
      - extract
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: ocr_server 
              changeOrigin: true
  preprocessing:
    apiEndpoints:
      - lines_v2
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: preprocessing_server 
              changeOrigin: true
  doc_structure:
    apiEndpoints:
      - digital_pdf
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: doc_structure_server 
              changeOrigin: true
  ocr_aadhar:
    apiEndpoints:
      - aadhaar
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: ocr_aadhar_server 
              changeOrigin: true
  ner_server_proxy:
    apiEndpoints:
      - ner_v0
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: ner_server 
              changeOrigin: true
  ner_etl_server_proxy:
    apiEndpoints:
      - ner_etl
      - ner_etl_wf
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: ner_etl_server 
              changeOrigin: true
  aligner_etl_server_proxy:
    apiEndpoints:
      - aligner_align
      - aligner_get
      - get_job
      - wf_sen_align
      - wf_sen
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: aligner_etl_server 
              changeOrigin: true
  wf_manager_server_proxy:
    apiEndpoints:
      - wf_initiate
      - wf_interrupt
      - wf_search
      - wf_search_bulk
      - wf_search_config
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: wf_manager_server 
              changeOrigin: true
  pdftohtml_etl_server_proxy:
    apiEndpoints:
      - pdf_to_html
      - pdf_to_html_wf
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: pdftohtml_etl_server 
              changeOrigin: true
  htmltojson_etl_server_proxy:
    apiEndpoints:
      - html_to_json
      - html_to_json_wf
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: htmltojson_etl_server 
              changeOrigin: true
  block_merger_server_proxy:
    apiEndpoints:
      - pdf-extractor
      - merge-blocks-wf
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: block_merger_server 
              changeOrigin: true
  file_converter_server_proxy:
    apiEndpoints:
      - convert-pdf
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: file_converter_server 
              changeOrigin: true
  user_file_uploader_server_secure_proxy:
    apiEndpoints:
      - upload-file
      - serve-file
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: user_file_uploader_server 
              changeOrigin: true
  translator_server_proxy:
    apiEndpoints:
      - wf_translate
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: translator_server 
              changeOrigin: true
  content_handler_server_proxy:
    apiEndpoints:
      - save-content
      - fetch-content
      - update-content
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: content_handler_server 
              changeOrigin: true
  user_file_uploader_server_proxy:
    apiEndpoints:
      - download-file
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: user_file_uploader_server 
              changeOrigin: true
  ocr_etl_server_proxy:
    apiEndpoints:
      - sentence_extract_lines
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: ocr_etl_server 
              changeOrigin: true
  ocr_etl_server_v2_proxy:
    apiEndpoints:
      - sentence_extract_lines_v2
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - proxy:
          - action:
              serviceEndpoint: ocr_etl_server_v2 
              changeOrigin: true
  corpusproxywithoutauth:
    apiEndpoints:
      - extract-paragraphs
      - extract-paragraphs-pagewise
      - signup-user
      - forgot-user-password
      - set-user-password
      - activate-account
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                requestID: 'requestID'
      - rate-limit:
        - action:                         # allow
            max: 5                       # max 5 request
            delayMs: 0
            windowMs: 1000              # per 1 seconds
            rateLimitBy: "${req.ip}"
      - proxy:
          - action:
              serviceEndpoint: corpusproxywithoutauth 
              changeOrigin: true
  auto:
    apiEndpoints:
      - translate
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - rate-limit:
        - action:                         # allow
            max: 50                       # max 50 request
            delayMs: 0
            windowMs: 1000              # per 1 seconds
            rateLimitBy: "${consumer.token.authenticatedUserId}"
      - proxy:
          - action:
              serviceEndpoint: auto 
              changeOrigin: true
  file_upload:
    apiEndpoints:
      - download_file
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: file_server 
              changeOrigin: true
  file_upload_secure:
    apiEndpoints:
      - upload_file
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - oauth2:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - rate-limit:
        - action:                         # allow
            max: 50                       # max 50 request
            delayMs: 0
            windowMs: 1000              # per 1 seconds
            rateLimitBy: "${consumer.token.authenticatedUserId}"
      - proxy:
          - action:
              serviceEndpoint: file_server 
              changeOrigin: true
  sent_tokenizer:
    apiEndpoints:
      - sent_tokenize
      - sent_tokenize_wf
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                requestID: 'requestID'
      - proxy:
          - action:
              serviceEndpoint: sentence_tokenizer_server 
              changeOrigin: true
  default:
    apiEndpoints:
      - api
      - translate-docx
      - fetch-process
      - fetch-sentences
      - get-profile
      - convert-to-pdf
      - update-password
      - upload-corpus
      - get-corpus
      - update-password-admin
      - save-benchmark
      - save-translated-docx
      - remove-process
    policies:
    # Uncomment `key-auth:` when instructed to in the Getting Started guide.
      - jaeger-policy:
      - cors:
         - action:
              origin: true
              methods: 'GET,PUT,PATCH,POST,DELETE,HEAD'
              maxAge: 100000000
      - oauth2:
      - headers:
         - action:
              headersPrefix: 'ad-'
              forwardHeaders:
                userid: 'consumer.token.authenticatedUserId'
                requestID: 'requestID'
      - rate-limit:
         - action:                         # allow
              max: 5                       # max 5 request
              delayMs: 0
              windowMs: 1000              # per 1 seconds
              rateLimitBy: "${req.ip}"
      - proxy:
          - action:
              serviceEndpoint: httpbin 
              changeOrigin: true




              
